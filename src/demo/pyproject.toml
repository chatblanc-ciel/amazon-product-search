[tool.poetry]
name = "demo"
version = "0.1.0"
description = ""
authors = ["rejasupotaro"]

[tool.poetry.dependencies]
python = "3.11.8"
amazon_product_search = { path = "../amazon-product-search", develop = true }
streamlit = "^1.39.0"
streamlit-aggrid = "^1.0.5"

[tool.poetry.group.dev.dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# For available rules, see https://beta.ruff.rs/docs/rules/
select = [
    "F",  # Pyflakes
    "E",  # pydocstyle
    "W",  # pydocstyle
    "C90",  # mccabe
    "I",  # isort
    "N",  # pep8-naming
    "YTT",  # flake8-2020
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ISC",  # flake8-implicit-str-concat
    "Q",  # flake8-quotes
    "PT",  # flake8-pytest-style
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "RUF",  # Ruff-specific rules
]

[tool.ruff.lint.isort]
known-first-party = [
    "amazon_product_search",
    "amazon_product_search_dense_retrieval",
    "demo",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.11"
mypy_path = ["src"]
ignore_missing_imports = true
